// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PhinaMart.Models;

#nullable disable

namespace PhinaMart.Migrations
{
    [DbContext(typeof(PhinaMartContext))]
    partial class PhinaMartContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PhinaMart.Models.Blog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Author")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("Created_at");

                    b.Property<string>("Image")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Summary")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("Updated_at");

                    b.HasKey("Id")
                        .HasName("PK__Blogs__3214EC07AAA03016");

                    b.ToTable("Blogs");
                });

            modelBuilder.Entity("PhinaMart.Models.BlogComment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("BlogId")
                        .HasColumnType("int")
                        .HasColumnName("Blog_id");

                    b.Property<string>("CommentText")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Comment_text");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("Created_at");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("Updated_at");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("User_id");

                    b.HasKey("Id")
                        .HasName("PK__BlogComm__3214EC0765548345");

                    b.HasIndex("BlogId");

                    b.HasIndex("UserId");

                    b.ToTable("BlogComments");
                });

            modelBuilder.Entity("PhinaMart.Models.BlogDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("BlogId")
                        .HasColumnType("int")
                        .HasColumnName("Blog_id");

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("Created_at");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("Updated_at");

                    b.HasKey("Id")
                        .HasName("PK__BlogDeta__3214EC0712BFEE10");

                    b.HasIndex("BlogId");

                    b.ToTable("BlogDetails");
                });

            modelBuilder.Entity("PhinaMart.Models.BlogReply", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("BlogCommentsId")
                        .HasColumnType("int")
                        .HasColumnName("BlogComments_id");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("Created_at");

                    b.Property<string>("ReplyText")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Reply_text");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("Updated_at");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("User_id");

                    b.HasKey("Id")
                        .HasName("PK__BlogRepl__3214EC0793A752A7");

                    b.HasIndex("BlogCommentsId");

                    b.HasIndex("UserId");

                    b.ToTable("BlogReplies");
                });

            modelBuilder.Entity("PhinaMart.Models.Brand", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Company_name");

                    b.Property<string>("ContactPerson")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Contact_person");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Image")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Phone")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Slug")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__Brands__3214EC07C7265AD2");

                    b.ToTable("Brands");
                });

            modelBuilder.Entity("PhinaMart.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("Created_at");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Slug")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("Updated_at");

                    b.HasKey("Id")
                        .HasName("PK__Categori__3214EC07CA04BFCB");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("PhinaMart.Models.Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CommentText")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Comment_text");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("Created_at");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("Product_id");

                    b.Property<int?>("Rating")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("Updated_at");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("User_id");

                    b.HasKey("Id")
                        .HasName("PK__Comments__3214EC079DA26B2A");

                    b.HasIndex("ProductId");

                    b.HasIndex("UserId");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("PhinaMart.Models.Discount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("DiscountPercentage")
                        .HasColumnType("decimal(5, 2)")
                        .HasColumnName("Discount_percentage");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime")
                        .HasColumnName("End_date");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime")
                        .HasColumnName("Start_date");

                    b.HasKey("Id")
                        .HasName("PK__Discount__3214EC07E3E8F761");

                    b.ToTable("Discounts");
                });

            modelBuilder.Entity("PhinaMart.Models.Inventory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("LastUpdated")
                        .HasColumnType("datetime")
                        .HasColumnName("Last_updated");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("Product_id");

                    b.Property<int?>("StockQuantity")
                        .HasColumnType("int")
                        .HasColumnName("Stock_quantity");

                    b.Property<string>("WarehouseLocation")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Warehouse_location");

                    b.HasKey("Id")
                        .HasName("PK__Inventor__3214EC0758897F73");

                    b.HasIndex("ProductId");

                    b.ToTable("Inventory", (string)null);
                });

            modelBuilder.Entity("PhinaMart.Models.Notification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("Created_at");

                    b.Property<bool?>("IsRead")
                        .HasColumnType("bit")
                        .HasColumnName("Is_read");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("User_id");

                    b.HasKey("Id")
                        .HasName("PK__Notifica__3214EC076E6BFD4E");

                    b.HasIndex("UserId");

                    b.ToTable("Notifications");
                });

            modelBuilder.Entity("PhinaMart.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("Created_at");

                    b.Property<DateTime?>("DeliveryDate")
                        .HasColumnType("datetime")
                        .HasColumnName("Delivery_date");

                    b.Property<string>("HowToPay")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("How_to_pay");

                    b.Property<string>("HowToTransport")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("How_to_transport");

                    b.Property<int?>("IdCustomer")
                        .HasColumnType("int")
                        .HasColumnName("Id_customer");

                    b.Property<int?>("IdStaff")
                        .HasColumnType("int")
                        .HasColumnName("Id_staff");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OrderCode")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Order_code");

                    b.Property<DateTime?>("OrderDate")
                        .HasColumnType("datetime")
                        .HasColumnName("Order_date");

                    b.Property<string>("Phone")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<decimal?>("TotalAmount")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("Total_amount");

                    b.Property<decimal?>("TransportFee")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("Transport_fee");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("Updated_at");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("User_id");

                    b.Property<string>("UserName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("User_name");

                    b.HasKey("Id")
                        .HasName("PK__Orders__3214EC074A6F40F1");

                    b.HasIndex("UserId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("PhinaMart.Models.OrderDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal?>("Discount")
                        .HasColumnType("decimal(5, 2)");

                    b.Property<int?>("OrderId")
                        .HasColumnType("int")
                        .HasColumnName("Order_id");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("PriceUnit")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Price_unit");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("Product_id");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__Order_de__3214EC07AA2AF4B1");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("Order_details", (string)null);
                });

            modelBuilder.Entity("PhinaMart.Models.PageWeb", b =>
                {
                    b.Property<string>("NamePage")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Name_page");

                    b.Property<string>("Url")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.ToTable("PageWeb", (string)null);
                });

            modelBuilder.Entity("PhinaMart.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("BrandId")
                        .HasColumnType("int")
                        .HasColumnName("Brand_id");

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int")
                        .HasColumnName("Category_id");

                    b.Property<string>("Color")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("Created_at");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DescriptionUnit")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Description_unit");

                    b.Property<decimal?>("Discount")
                        .HasColumnType("decimal(5, 2)");

                    b.Property<string>("Image")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<decimal?>("Price")
                        .IsRequired()
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("Size")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Slug")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<int?>("StockQuantity")
                        .HasColumnType("int")
                        .HasColumnName("Stock_Quantity");

                    b.Property<string>("TypeCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Type_code");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("Updated_at");

                    b.Property<int?>("ViewLuot")
                        .HasColumnType("int")
                        .HasColumnName("View_luot");

                    b.HasKey("Id")
                        .HasName("PK__Products__3214EC07229037B8");

                    b.HasIndex("BrandId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("PhinaMart.Models.ProductDiscount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("DiscountId")
                        .HasColumnType("int")
                        .HasColumnName("Discount_id");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("Product_id");

                    b.HasKey("Id")
                        .HasName("PK__ProductD__3214EC070BC147F0");

                    b.HasIndex("DiscountId");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductDiscounts");
                });

            modelBuilder.Entity("PhinaMart.Models.Reply", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CommentId")
                        .HasColumnType("int")
                        .HasColumnName("Comment_id");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("Created_at");

                    b.Property<string>("ReplyText")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Reply_text");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("Updated_at");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("User_id");

                    b.HasKey("Id")
                        .HasName("PK__Replies__3214EC07C98D319F");

                    b.HasIndex("CommentId");

                    b.HasIndex("UserId");

                    b.ToTable("Replies");
                });

            modelBuilder.Entity("PhinaMart.Models.Review", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("Created_at");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("Product_id");

                    b.Property<int?>("Rating")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("Updated_at");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("User_id");

                    b.HasKey("Id")
                        .HasName("PK__Reviews__3214EC07B804989E");

                    b.HasIndex("ProductId");

                    b.HasIndex("UserId");

                    b.ToTable("Reviews");
                });

            modelBuilder.Entity("PhinaMart.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool?>("AddPermission")
                        .HasColumnType("bit")
                        .HasColumnName("Add_permission");

                    b.Property<bool?>("DeletePermission")
                        .HasColumnType("bit")
                        .HasColumnName("Delete_permission");

                    b.Property<bool?>("EditPermission")
                        .HasColumnType("bit")
                        .HasColumnName("Edit_permission");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("PageId")
                        .HasColumnType("int")
                        .HasColumnName("Page_id");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("User_id");

                    b.Property<bool?>("ViewPermission")
                        .HasColumnType("bit")
                        .HasColumnName("View_permission");

                    b.HasKey("Id")
                        .HasName("PK__Role__3214EC0753F98AB0");

                    b.HasIndex("UserId");

                    b.ToTable("Role", (string)null);
                });

            modelBuilder.Entity("PhinaMart.Models.Staff", b =>
                {
                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Password")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("User_name");

                    b.ToTable("Staffs");
                });

            modelBuilder.Entity("PhinaMart.Models.StarRating", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("Created_at");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("Product_id");

                    b.Property<int?>("Rating")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("Updated_at");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("User_id");

                    b.HasKey("Id")
                        .HasName("PK__StarRati__3214EC070966D6FA");

                    b.HasIndex("ProductId");

                    b.HasIndex("UserId");

                    b.ToTable("StarRatings");
                });

            modelBuilder.Entity("PhinaMart.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("Created_at");

                    b.Property<DateOnly?>("DateOfBirth")
                        .HasColumnType("date")
                        .HasColumnName("Date_of_birth");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Gender")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Image")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Phone")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RandomKey")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Random_key");

                    b.Property<int?>("Role")
                        .HasMaxLength(255)
                        .HasColumnType("int");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("Updated_at");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id")
                        .HasName("PK__Users__3214EC07D3FE3EE8");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("PhinaMart.Models.WishList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("Product_id");

                    b.Property<DateTime?>("SelectDate")
                        .HasColumnType("datetime")
                        .HasColumnName("Select_date");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("User_id");

                    b.HasKey("Id")
                        .HasName("PK__WishList__3214EC074C02B87F");

                    b.HasIndex("ProductId");

                    b.HasIndex("UserId");

                    b.ToTable("WishList", (string)null);
                });

            modelBuilder.Entity("PhinaMart.Models.BlogComment", b =>
                {
                    b.HasOne("PhinaMart.Models.Blog", "Blog")
                        .WithMany("BlogComments")
                        .HasForeignKey("BlogId")
                        .HasConstraintName("FK__BlogComme__Blog___5535A963");

                    b.HasOne("PhinaMart.Models.User", "User")
                        .WithMany("BlogComments")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__BlogComme__User___5629CD9C");

                    b.Navigation("Blog");

                    b.Navigation("User");
                });

            modelBuilder.Entity("PhinaMart.Models.BlogDetail", b =>
                {
                    b.HasOne("PhinaMart.Models.Blog", "Blog")
                        .WithMany("BlogDetails")
                        .HasForeignKey("BlogId")
                        .HasConstraintName("FK__BlogDetai__Blog___52593CB8");

                    b.Navigation("Blog");
                });

            modelBuilder.Entity("PhinaMart.Models.BlogReply", b =>
                {
                    b.HasOne("PhinaMart.Models.BlogComment", "BlogComments")
                        .WithMany("BlogReplies")
                        .HasForeignKey("BlogCommentsId")
                        .HasConstraintName("FK__BlogRepli__BlogC__59063A47");

                    b.HasOne("PhinaMart.Models.User", "User")
                        .WithMany("BlogReplies")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__BlogRepli__User___59FA5E80");

                    b.Navigation("BlogComments");

                    b.Navigation("User");
                });

            modelBuilder.Entity("PhinaMart.Models.Comment", b =>
                {
                    b.HasOne("PhinaMart.Models.Product", "Product")
                        .WithMany("Comments")
                        .HasForeignKey("ProductId")
                        .HasConstraintName("FK__Comments__Produc__5DCAEF64");

                    b.HasOne("PhinaMart.Models.User", "User")
                        .WithMany("Comments")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__Comments__User_i__5CD6CB2B");

                    b.Navigation("Product");

                    b.Navigation("User");
                });

            modelBuilder.Entity("PhinaMart.Models.Inventory", b =>
                {
                    b.HasOne("PhinaMart.Models.Product", "Product")
                        .WithMany("Inventories")
                        .HasForeignKey("ProductId")
                        .HasConstraintName("FK__Inventory__Produ__71D1E811");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("PhinaMart.Models.Notification", b =>
                {
                    b.HasOne("PhinaMart.Models.User", "User")
                        .WithMany("Notifications")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__Notificat__User___74AE54BC");

                    b.Navigation("User");
                });

            modelBuilder.Entity("PhinaMart.Models.Order", b =>
                {
                    b.HasOne("PhinaMart.Models.User", "User")
                        .WithMany("Orders")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__Orders__User_id__412EB0B6");

                    b.Navigation("User");
                });

            modelBuilder.Entity("PhinaMart.Models.OrderDetail", b =>
                {
                    b.HasOne("PhinaMart.Models.Order", "Order")
                        .WithMany("OrderDetails")
                        .HasForeignKey("OrderId")
                        .HasConstraintName("FK__Order_det__Order__440B1D61");

                    b.HasOne("PhinaMart.Models.Product", "Product")
                        .WithMany("OrderDetails")
                        .HasForeignKey("ProductId")
                        .HasConstraintName("FK__Order_det__Produ__44FF419A");

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("PhinaMart.Models.Product", b =>
                {
                    b.HasOne("PhinaMart.Models.Brand", "Brand")
                        .WithMany("Products")
                        .HasForeignKey("BrandId")
                        .HasConstraintName("FK__Products__Brand___3C69FB99");

                    b.HasOne("PhinaMart.Models.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .HasConstraintName("FK__Products__Catego__3B75D760");

                    b.Navigation("Brand");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("PhinaMart.Models.ProductDiscount", b =>
                {
                    b.HasOne("PhinaMart.Models.Discount", "Discount")
                        .WithMany("ProductDiscounts")
                        .HasForeignKey("DiscountId")
                        .HasConstraintName("FK__ProductDi__Disco__6EF57B66");

                    b.HasOne("PhinaMart.Models.Product", "Product")
                        .WithMany("ProductDiscounts")
                        .HasForeignKey("ProductId")
                        .HasConstraintName("FK__ProductDi__Produ__6E01572D");

                    b.Navigation("Discount");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("PhinaMart.Models.Reply", b =>
                {
                    b.HasOne("PhinaMart.Models.Comment", "Comment")
                        .WithMany("Replies")
                        .HasForeignKey("CommentId")
                        .HasConstraintName("FK__Replies__Comment__60A75C0F");

                    b.HasOne("PhinaMart.Models.User", "User")
                        .WithMany("Replies")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__Replies__User_id__619B8048");

                    b.Navigation("Comment");

                    b.Navigation("User");
                });

            modelBuilder.Entity("PhinaMart.Models.Review", b =>
                {
                    b.HasOne("PhinaMart.Models.Product", "Product")
                        .WithMany("Reviews")
                        .HasForeignKey("ProductId")
                        .HasConstraintName("FK__Reviews__Product__68487DD7");

                    b.HasOne("PhinaMart.Models.User", "User")
                        .WithMany("Reviews")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__Reviews__User_id__693CA210");

                    b.Navigation("Product");

                    b.Navigation("User");
                });

            modelBuilder.Entity("PhinaMart.Models.Role", b =>
                {
                    b.HasOne("PhinaMart.Models.User", "User")
                        .WithMany("Roles")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__Role__User_id__48CFD27E");

                    b.Navigation("User");
                });

            modelBuilder.Entity("PhinaMart.Models.StarRating", b =>
                {
                    b.HasOne("PhinaMart.Models.Product", "Product")
                        .WithMany("StarRatings")
                        .HasForeignKey("ProductId")
                        .HasConstraintName("FK__StarRatin__Produ__656C112C");

                    b.HasOne("PhinaMart.Models.User", "User")
                        .WithMany("StarRatings")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__StarRatin__User___6477ECF3");

                    b.Navigation("Product");

                    b.Navigation("User");
                });

            modelBuilder.Entity("PhinaMart.Models.WishList", b =>
                {
                    b.HasOne("PhinaMart.Models.Product", "Product")
                        .WithMany("WishLists")
                        .HasForeignKey("ProductId")
                        .HasConstraintName("FK__WishList__Produc__4D94879B");

                    b.HasOne("PhinaMart.Models.User", "User")
                        .WithMany("WishLists")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__WishList__User_i__4CA06362");

                    b.Navigation("Product");

                    b.Navigation("User");
                });

            modelBuilder.Entity("PhinaMart.Models.Blog", b =>
                {
                    b.Navigation("BlogComments");

                    b.Navigation("BlogDetails");
                });

            modelBuilder.Entity("PhinaMart.Models.BlogComment", b =>
                {
                    b.Navigation("BlogReplies");
                });

            modelBuilder.Entity("PhinaMart.Models.Brand", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("PhinaMart.Models.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("PhinaMart.Models.Comment", b =>
                {
                    b.Navigation("Replies");
                });

            modelBuilder.Entity("PhinaMart.Models.Discount", b =>
                {
                    b.Navigation("ProductDiscounts");
                });

            modelBuilder.Entity("PhinaMart.Models.Order", b =>
                {
                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("PhinaMart.Models.Product", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("Inventories");

                    b.Navigation("OrderDetails");

                    b.Navigation("ProductDiscounts");

                    b.Navigation("Reviews");

                    b.Navigation("StarRatings");

                    b.Navigation("WishLists");
                });

            modelBuilder.Entity("PhinaMart.Models.User", b =>
                {
                    b.Navigation("BlogComments");

                    b.Navigation("BlogReplies");

                    b.Navigation("Comments");

                    b.Navigation("Notifications");

                    b.Navigation("Orders");

                    b.Navigation("Replies");

                    b.Navigation("Reviews");

                    b.Navigation("Roles");

                    b.Navigation("StarRatings");

                    b.Navigation("WishLists");
                });
#pragma warning restore 612, 618
        }
    }
}
